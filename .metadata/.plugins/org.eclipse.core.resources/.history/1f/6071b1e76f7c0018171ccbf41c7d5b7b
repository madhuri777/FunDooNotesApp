package com.bridgeit.fundoonotes.utility;

import java.security.Key;
import java.util.Date;

import javax.crypto.spec.SecretKeySpec;
import javax.xml.bind.DatatypeConverter;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.JwtBuilder;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

public class JWT {


	 private static String secreateKey="AAKASH";
	 private static String issuer="abk";
	 private static String subject="tockens";
	 
		//Sample method to construct a JWT
		public static String createJWT(String id,long ttlMillis) {
		 
			System.out.println("hello");
		    //The JWT signature algorithm we will be using to sign the token
		    SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;
		 
		    long nowMillis = System.currentTimeMillis();
		    ttlMillis=nowMillis+ttlMillis;
		    Date now = new Date(ttlMillis);
		    
		    //We will sign our JWT with our ApiKey secret
		   byte[] apiKeySecretBytes = DatatypeConverter.parseBase64Binary(secreateKey);
		    Key signingKey = new SecretKeySpec(apiKeySecretBytes, signatureAlgorithm.getJcaName());
		 
		    //Let's set the JWT Claims
		   JwtBuilder builder = Jwts.builder().setId(id)
		                                .setIssuedAt(now)
		                                .setSubject(subject)
		                                .setIssuer(issuer)
		                                .signWith(signatureAlgorithm, signingKey);
		     
		    builder.setExpiration(now);
		    
		    //Builds the JWT and serializes it to a compact, URL-safe string
		    return builder.compact();
		}
		
		public static long parseJWT(String jwt) {
			 
		    //This line will throw an exception if it is not a signed JWS (as expected)
		    Claims claims = Jwts.parser()         
		       .setSigningKey(DatatypeConverter.parseBase64Binary(secreateKey))
		       .parseClaimsJws(jwt).getBody();
		    System.out.println("ID: " + claims.getId());
		    long id=Long.parseLong(claims.getId());
		    return id;
//		    System.out.println("Subject: " + claims.getSubject());
//		    System.out.println("Issuer: " + claims.getIssuer());
//		    System.out.println("Expiration: " + claims.getExpiration());
		}
}
